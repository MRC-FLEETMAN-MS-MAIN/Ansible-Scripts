- hosts: localhost
  gather_facts: yes
  vars:
     region: us-east-1
     keypair_name: microservice
     instance_type: t2.nano
     image_name: ami-0c94855ba95c71c99
     live_ip_address: 52.4.163.5

  tasks:
    - name: Setup security group
      ec2_group:
        name: rabbitmq
        description: Security rules for RABBIT mq Server
        region: "{{ region }}"
        rules_egress:
           - proto: tcp
             from_port: 0
             to_port: 65535
             cidr_ip: 0.0.0.0/0
        rules:
           - proto: tcp
             from_port: 15672
             to_port: 15672
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 5672
             to_port: 5672
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 5671
             to_port: 5671
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 15671
             to_port: 15671
             cidr_ip: 0.0.0.0/0


           - proto: tcp
             from_port: 4369
             to_port: 4369
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 22
             to_port: 22
             cidr_ip: 0.0.0.0/0

    - name: Provision an instance
      ec2:
        key_name: "{{ keypair_name }}"
        group: rabbitmq
        instance_type: "{{ instance_type }}"
        image: "{{ image_name }}"
        wait: true
        region: "{{region}}"
        exact_count: 1
        count_tag:
          Name: RabbitMQ
        instance_tags:
          Name: RabbitMQ
      register: ec2

    - name: Allocating elastic IP to instance
      ec2_eip:
           instance_id: "{{ ec2.instances[0].instance_id }}"
           ip: "{{ live_ip_address }}"
           region: "{{ region }}"

    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=ec2hosts
      with_items: "{{ec2.instances}}"

    - name: Wait for SSH Server to start responding
      wait_for:
              port: 22
              host: "{{item.private_ip}}"
              state: started
      with_items: "{{ec2.instances}}"

- hosts:  tag_Name_RabbitMQ ec2hosts
  tasks:
  - name: upgrade all packages
    yum: name=* state=latest
    become: true

  - name: Install JDK
    yum:
       name: java-1.8.0-openjdk-devel
       state: latest
    become: true

  - name: Use Java8 for Runtime Java
    alternatives:
       name: java
       path: /usr/lib/jvm/jre-1.8.0-openjdk/bin/java
       link: /usr/bin/java
    become: true

  - name: Remove exisiting docker files
    yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed
    become: yes

  - name: Install Docker
    yum:
        name:
          - docker
    become: yes

  - name: "Starting and Enabling Docker service"
    service:
        name: docker
        state: started
        enabled: yes
    become: yes


  - name: Add user ec2-user to docker group
    user:
         name: ec2-user
         groups: docker
         append: yes
    become: yes



  - name: Build and Run the Docker container
    command: docker run --restart always -p 15672:15672 -p 5672:5672 -p 15671:15671 -p 5671:5671 -p 4369:4369  --detach --name minirabbit rabbitmq:3-management
    become: yes
